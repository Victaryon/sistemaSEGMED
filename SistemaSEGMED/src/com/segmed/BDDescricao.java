package com.segmed;
// default package
// Generated 22/05/2018 16:38:09 by Hibernate Tools 5.2.10.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Descricao generated by hbm2java
 */
@Entity
@Table(name = "DESCRICAO", schema = "SEGMED")
public class BDDescricao implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int codigoDescricao;
	private BDClientes clientes;
	private BDServico servico;
	private float valor;
	private String descricaotexto;
	private Date dataDescricao;
	private Set<BDExameitem> exameitems = new HashSet<BDExameitem>(0);

	public BDDescricao() {
	}

	public BDDescricao(BDClientes clientes, BDServico servico, Date dataDescricao) {
		this.clientes = clientes;
		this.servico = servico;
		this.dataDescricao = dataDescricao;
	}

	public BDDescricao(int codigoDescricao, BDClientes clientes, BDServico servico, float valor, String descricaotexto,
			Set<BDExameitem> exameitems) {
		this.codigoDescricao = codigoDescricao;
		this.clientes = clientes;
		this.servico = servico;
		this.valor = valor;
		this.descricaotexto = descricaotexto;
		this.exameitems = exameitems;
	}

	@Id
	@GeneratedValue(generator="seq_descricao", strategy=GenerationType.AUTO)
	@SequenceGenerator(name="seq_descricao", sequenceName="seq_descricao", initialValue=1)
	@Column(name = "codigo_descricao", unique = true, nullable = false)
	public int getCodigoDescricao() {
		return this.codigoDescricao;
	}

	public void setCodigoDescricao(int codigoDescricao) {
		this.codigoDescricao = codigoDescricao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_cliente", nullable = false)
	public BDClientes getClientes() {
		return this.clientes;
	}

	public void setClientes(BDClientes clientes) {
		this.clientes = clientes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigo_servico", nullable = false)
	public BDServico getServico() {
		return this.servico;
	}

	public void setServico(BDServico servico) {
		this.servico = servico;
	}

	@Column(name = "valor", precision = 17, scale = 17)
	public float getValor() {
		return this.valor;
	}

	public void setValor(float valor) {
		this.valor = valor;
	}

	@Column(name = "descricaotexto", length = 4000)
	public String getDescricaotexto() {
		return this.descricaotexto;
	}

	public void setDescricaotexto(String descricaotexto) {
		this.descricaotexto = descricaotexto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "descricao")
	public Set<BDExameitem> getExameitems() {
		return this.exameitems;
	}

	public void setExameitems(Set<BDExameitem> exameitems) {
		this.exameitems = exameitems;
	}
	
	@Temporal(TemporalType.DATE)
	@Column(name = "data_descricao", length = 13)
	public Date getDataDescricao() {
		return dataDescricao;
	}

	public void setDataDescricao(Date dataDescricao) {
		this.dataDescricao = dataDescricao;
	}
	
	public String valorUn() {
		String valorFormat = String.format("%.2f",valor); //Formata o valor para ser mostrado na tabela
        return valorFormat;
	}

}
